# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "chat-flock"
version = "0.1.2"
description = "Driving Dynamic Multi-Participant Chat Interactions for AI and Human Discourse"
readme = "README.md"
authors = ["chat-flock <hello@chat-flock.com>"]
license = "MIT"
repository = "https://github.com/doodledood/chat-flock"
homepage = "https://github.com/doodledood/chat-flock"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ["chat", "chatbot", "openai", "llm", "generative-ai", "langchain"]

packages = [
  { include = "chatflock" },
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [#! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]



[tool.poetry.dependencies]
python = "^3.9.0"
importlib_metadata = "^6.8.0"
requests = "^2.31.0"
langchain = ">=0.0.335,<0.0.341"
python-dotenv = "^1.0.0"
halo = "^0.0.31"
tqdm = "^4.66.1"
pydantic = "^2.4.2"
beautifulsoup4 = "^4.12.2"
tenacity = "^8.2.3"
questionary = "^2.0.1"
docker = "^6.1.3"
openai = "^1.2.3"
tiktoken = "^0.5.1"

[tool.poetry.dev-dependencies]
bandit = "^1.7.1"
black = { version = "^23.11.0", allow-prereleases = true }
darglint = "^1.8.1"
isort = { extras = ["colors"], version = "^5.12.0" }
mypy = "^1.7.1"
mypy-extensions = "^1.0.0"
pre-commit = "^3.5.0"
pydocstyle = "^6.3.0"
pylint = "^3.0.2"
pytest = "^8.3.1"
pyupgrade = "^3.15.0"
safety = "^2.4.0b2"
coverage = "^7.3.2"
coverage-badge = "^1.1.0"
pytest-html = "^4.1.1"
pytest-cov = "^4.1.0"
sphinx = "^7.2.6"
furo = "^2023.9.10"
myst-parser = "^2.0.0"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.5.0"
sphinx-inline-tabs = "^2023.4.21"
sphinx-tabs = "^3.4.4"
sphinx-autoapi = "^3.0.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 120
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 120

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "chat-flock"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
